// Code generated by mockery v2.12.2. DO NOT EDIT.

package services

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	repo "github.com/vitthalaa/wager-app/internal/repo"

	testing "testing"
)

// MockPurchaseRepo is an autogenerated mock type for the IPurchaseRepo type
type MockPurchaseRepo struct {
	mock.Mock
}

// CreatePurchase provides a mock function with given fields: ctx, purchase
func (_m *MockPurchaseRepo) CreatePurchase(ctx context.Context, purchase *repo.Purchase) (*repo.Purchase, error) {
	ret := _m.Called(ctx, purchase)

	var r0 *repo.Purchase
	if rf, ok := ret.Get(0).(func(context.Context, *repo.Purchase) *repo.Purchase); ok {
		r0 = rf(ctx, purchase)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*repo.Purchase)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *repo.Purchase) error); ok {
		r1 = rf(ctx, purchase)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeletePurchase provides a mock function with given fields: ctx, id
func (_m *MockPurchaseRepo) DeletePurchase(ctx context.Context, id uint32) error {
	ret := _m.Called(ctx, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint32) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockPurchaseRepo creates a new instance of MockPurchaseRepo. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPurchaseRepo(t testing.TB) *MockPurchaseRepo {
	mock := &MockPurchaseRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
